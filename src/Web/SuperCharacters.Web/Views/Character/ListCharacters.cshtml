@model List<SuperCharactersApp.ViewModels.DTO.CharacterViewModels.CharacterViewModel>

@{
    ViewData["Title"] = "ListCharacters";
    var cnt = 0;
    string noSecretIdentity = "Too secret to be known.";
    var controller = ViewContext.RouteData.Values["controller"].ToString();
}

<table class="table table-striped">
    <thead>
        <tr>
            <td align="center"></td>
            <th scope="col">Operations</th>
            <th scope="col">#</th>
            <th scope="col">Name</th>
            <th scope="col">Character type</th>
            <th scope="col">Armour</th>
            <th scope="col">Damage</th>
            <th scope="col">HitPoints</th>
            <th scope="col">Secret identity</th>
            <th scope="col">Team</th>
            <th scope="col">Super powers</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var character in Model)
        {
            cnt++;


        <tr>
            <td align="center"></td>
            <th scope="row">
                <div class="btn-group" role="group">
                    <button type="button" class="btn btn-light btn-sm" data-toggle="modal" data-target="#modalEdit">
                        <span class="glyphicon glyphicon-edit" aria-hidden="true"></span>
                        <span>Edit</span>
                    </button>

                    <a href="#" class="btn btn-info  btn-sm">
                        <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                        <span>View</span>
                    </a>

                    <button type="button" class="btn btn-danger btn-sm"
                            data-toggle="modal" data-target="#modalDelete">
                        <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                        <span>Delete</span>
                    </button>
                    <partial name="_ReusableDeleteModal"
                             model='new SuperCharactersApp
                                                              .ViewModels
                                                              .DTO.ReusableModalModel
                                                              .ModalViewModel { Id = character.Id
                                                              ,Controller= controller};' />


                </div>
            </th>
            <th scope="row">@cnt</th>
            <td>@character.Name</td>
            <td>@character.CharacterType</td>
            <td>@character.Armour</td>
            <td>@character.Damage</td>
            <td>@character.HitPoints</td>
            @if (character.SecretIdentity == null)
            {
                <td>@noSecretIdentity</td>
            }
            else
            {
                <td>@(character.SecretIdentity.FirstName) @(character.SecretIdentity.LastName)</td>
            }
            <td>@character.Team.TeamName</td>
            <td>@character.SuperPowers.Select(x=>x.SuperPowerName)</td>
        </tr>
        }
    </tbody>
</table>
